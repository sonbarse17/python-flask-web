name: Deploy to Google GKE

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Configure Docker'
      run: gcloud auth configure-docker

    - name: Build, tag, and push image to Google Artifact Registry
      id: build-image
      env:
        GAR_LOCATION: ${{ secrets.GCP_REGION }}
        GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        docker build -t $GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/python-flask-web:$IMAGE_TAG .
        docker push $GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/python-flask-web:$IMAGE_TAG
        echo "image=$GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/python-flask-web:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.21.3' # Specify your desired kubectl version

    - name: Update kube config
      run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }}

    - name: Deploy to GKE
      run: |
        sed -i 's|__IMAGE_URL__|${{ steps.build-image.outputs.image }}|g' k8s/deployment.yml
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml

    - name: Wait for deployment to complete
      run: kubectl rollout status deployment/python-flask-web-deployment --timeout=300s

    - name: Get Load Balancer IP
      run: |
        echo "Waiting for Load Balancer to be provisioned..."
        sleep 30
        kubectl get svc python-flask-web-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}' > load_balancer_ip.txt
        echo "Load Balancer IP: $(cat load_balancer_ip.txt)"