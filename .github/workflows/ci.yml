name: Deploy to Amazon EKS

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.21.3' # Specify your desired kubectl version

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        # Replace the image placeholder in the deployment.yml
        sed -i 's|${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}|${{ steps.build-image.outputs.image }}|g' k8s/deployment.yml
        kubectl apply -f k8s/deployment.yml
        kubectl apply -f k8s/service.yml

    - name: Wait for deployment to complete
      run: kubectl rollout status deployment/python-flask-web-deployment --timeout=300s

    - name: Get Load Balancer URL
      run: |
        echo "Waiting for Load Balancer to be provisioned..."
        sleep 30
        kubectl get svc python-flask-web-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' > load_balancer_url.txt
        echo "Load Balancer URL: $(cat load_balancer_url.txt)"
